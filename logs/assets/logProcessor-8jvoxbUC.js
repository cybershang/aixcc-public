(function(){"use strict";function g(e){return e.name==="crs.agents.agent"&&(e.function==="_log_creation"||e.function==="__init__")}function u(e){return e.name==="crs.agents.agent"&&e.function==="_append_msg"}function f(e){return e.name==="crs.agents.agent"&&e.function==="_compress_context"}function p(e){return e.role==="tool"}function d(e){return!!e.tool_calls}function m(e){let a={},r={};for(const i of e){const s=i.record,o=s.extra.running_agent,l=s.extra.running_tool_call;if(g(s)){const t=s.extra.agent,n={key:t,parentKey:o,label:s.extra.name,children:[],data:{messages:[],logs:[],total_cost:0,compressions:0},icon:"pi pi-fw pi-prime"};a[t]=n,o!==null&&a[o].children.push(n),l!==null&&r[l].agents.push(n)}else if(u(s)){const t=s.extra;t.compressions=a[t.agent].data.compressions,t.timestamp=s.time.timestamp;const n=a[t.agent].data.messages;if(t.elapsed=n.length>0?t.timestamp-n[n.length-1].timestamp:0,t.total_cost&&(t.cost=t.total_cost-(n.length>0?n[n.length-1].total_cost:0),a[t.agent].data.total_cost=t.total_cost),t.logs=a[t.agent].data.logs,a[t.agent].data.logs=[],n.push(t),d(t))for(const c of t.tool_calls)r[c.id]={...c,agents:[],logs:[]};p(t)&&(t.tool_call=r[t.tool_call_id])}else f(s)?a[o].data.compressions++:o!==null&&(a[o].data.logs.push(s),l!=null&&r[l].logs.push(s))}return Object.values(a).filter(i=>i.parentKey===null)}async function _(e){const r=(await fetch(e)).body.getReader(),i=new TextDecoder;let s=[],o="";for(;;){const{value:l,done:t}=await r.read();if(t)break;o+=i.decode(l,{stream:!0});let n=o.split(/\r?\n/);o=n.pop();for(const c of n)if(c.trim())try{s.push(JSON.parse(c))}catch(h){console.error("JSON parse error:",c,h)}}if(o.trim())try{s.push(JSON.parse(o))}catch(l){console.error("JSON parse error:",o,l)}return s}self.onmessage=function(e){_(e.data).then(m).then(self.postMessage)}})();
