diff --git a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-audiovideo-module/src/main/java/org/apache/tika/parser/m3/M3U8Parser.java b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-audiovideo-module/src/main/java/org/apache/tika/parser/m3/M3U8Parser.java
index ac9b649..673832d 100644
--- a/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-audiovideo-module/src/main/java/org/apache/tika/parser/m3/M3U8Parser.java
+++ b/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-audiovideo-module/src/main/java/org/apache/tika/parser/m3/M3U8Parser.java
@@ -158,22 +158,12 @@ public class M3U8Parser implements Parser {
             return;
         }
         //TODO -- parse contents in EXTINF line
-        // split on , then the first value is the length (can be -1),
-        // the last value is the title; intermediate values are key=value format
+        // split on , then the first value is the length (can be -1), the last value is the title; intermediate values are key=value format
         metadata.add(PLAY_LIST_LINK, nextLine);
-        if (! nextLine.startsWith("http")) {
-            return;
-        }
-        EmbeddedDocumentExtractor ex = EmbeddedDocumentUtil.getEmbeddedDocumentExtractor(context);
-        Metadata m = new Metadata();
-        if (ex.shouldParseEmbedded(m)) {
-            try (InputStream is = TikaInputStream.get(new URL(nextLine))) {
-                ex.parseEmbedded(is, new BodyContentHandler(new EmbeddedContentHandler(xhtml)), m,
-                        true);
-            }
-        }
+        // We no longer fetch or parse external resources to prevent SSRF
     }
 
+
     private String getNextContentLine(BufferedReader reader) throws IOException {
         String line = reader.readLine();
         while (true) {
@@ -181,10 +171,10 @@ public class M3U8Parser implements Parser {
                 return null;
             } else if (line.trim().isBlank() || line.startsWith("##")) {
                 //empty or comment
+                line = reader.readLine();
             } else {
                 return line;
             }
-            line = reader.readLine();
         }
     }
 
